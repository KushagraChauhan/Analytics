define(["./impl/logger","./impl/PersistenceStoreMetadata","./pouchDBPersistenceStoreFactory"],function(a,b,c){"use strict";var d=function(){Object.defineProperty(this,"_stores",{value:{},writable:!0}),Object.defineProperty(this,"_factories",{value:{},writable:!0}),Object.defineProperty(this,"_DEFAULT_STORE_FACTORY_NAME",{value:"_defaultFactory",writable:!1}),Object.defineProperty(this,"_METADATA_STORE_NAME",{value:"systemCache-metadataStore",writable:!1}),Object.defineProperty(this,"_storeNameMapping",{value:{},writable:!0})};return d.prototype.registerStoreFactory=function(a,b){if(!b)throw TypeError("A valid factory must be provided.");if(!a)throw TypeError("A valid name must be provided.");var c=this._mapStoreName(a),d=this._factories[c];if(d&&d!==b)throw TypeError("A factory with the same name has already been registered.");this._factories[c]=b},d.prototype.registerDefaultStoreFactory=function(a){this.registerStoreFactory(this._DEFAULT_STORE_FACTORY_NAME,a)},d.prototype.openStore=function(c,d){a.log("Offline Persistence Toolkit PersistenceStoreManager: openStore() for name: "+c);var e=this._mapStoreName(c),f=this._stores[e],g=d&&d.version||"0";if(f&&f[g])return Promise.resolve(f[g]);var h=this._factories[e];if(h||(h=this._factories[this._DEFAULT_STORE_FACTORY_NAME]),!h)return Promise.reject(new Error("no factory is registered to create the store."));var i=this;return a.log("Offline Persistence Toolkit PersistenceStoreManager: Calling createPersistenceStore on factory"),h.createPersistenceStore(e,d).then(function(a){f=f||{},f[g]=a,i._stores[e]=f;new b(e,h,Object.keys(f));return i._getMetadataStore().then(function(a){var b=i._encodeString(e);return a.upsert(b,{},Object.keys(f))}).then(function(){return a})})},d.prototype.hasStore=function(a,b){var c=this._mapStoreName(a),d=this._stores[c];return!!d&&(!b||!b.version||!!d[b.version])},d.prototype.deleteStore=function(b,c){a.log("Offline Persistence Toolkit PersistenceStoreManager: deleteStore() for name: "+b);var d=this,e=this._mapStoreName(b);return new Promise(function(a,b){var f={};f.options=c,f.self=d;var g=d._stores[e];return g?void a(f):d.getStoresMetadata().then(function(a){var b=[],c=a.get(e);return c&&c.versions&&c.versions.forEach(function(a){b.push(d.openStore(e,a))}),Promise.all(b)}).then(function(){a(f)})}).then(function(b){var c=b.self,d=b.options,f=c._stores[e];if(f){var g=d&&d.version;if(g){var h=f[g];return h?(a.log("Offline Persistence Toolkit PersistenceStoreManager: Calling delete on store"),h.delete().then(function(){return delete f[g],c._getMetadataStore().then(function(a){if(f&&Object.keys(f).length>0){var b=c._encodeString(e);return a.upsert(b,null,Object.keys(f))}return a.removeByKey(e)})}).then(function(){return!0})):Promise.resolve(!1)}var i=function(a){return function(b){var c=a[b];return c.delete()}},j=Object.keys(f).map(i(f),this);return Promise.all(j).then(function(){return delete c._stores[e],c._getMetadataStore().then(function(a){var b=c._encodeString(e);return a.removeByKey(b)}).then(function(){return!0})})}return Promise.resolve(!1)})},d.prototype.getStoresMetadata=function(){var a=this;return this._getMetadataStore().then(function(c){return c.keys().then(function(d){var e=[];return d.forEach(function(d){e.push(c.findByKey(d).then(function(c){var e=c,f=a._decodeString(d),g=a._factories[f];g||(g=a._factories[a._DEFAULT_STORE_FACTORY_NAME]);var h=new b(f,g,e);return h}))}),Promise.all(e)}).then(function(a){var b=new Map;return a.forEach(function(a){b.set(a.name,a)}),b})})},d.prototype._mapStoreName=function(a,b){var c=this._storeNameMapping[a];return c?c:(c=a.replace(/(.*):\/\/(.*)/gi,"$1$2"),this._storeNameMapping[a]=c,c)},d.prototype._getMetadataStore=function(){var a=this;if(!a._metadataStore){var b=this._factories[this._DEFAULT_STORE_FACTORY_NAME];return b||(this._factories[a._METADATA_STORE_NAME]=c),this.openStore(a._METADATA_STORE_NAME).then(function(b){return a._metadataStore=b,a._metadataStore})}return Promise.resolve(a._metadataStore)},d.prototype._encodeString=function(a){for(var b,c=[],b=0;b<a.length;b++){var d=Number(a.charCodeAt(b)).toString(16);c.push(d)}return c.join("")},d.prototype._decodeString=function(a){var b,c=a.toString(),d="";for(b=0;b<c.length;b+=2)d+=String.fromCharCode(parseInt(c.substr(b,2),16));return d},new d});